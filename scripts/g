#!/usr/bin/env zsh

main() {
	# exec rg --line-number --ignore-case "$@" . 2>/dev/null | peco --prompt="$*>" --exec 'awk -F : '"'"'{print "+" $2 " " $1}'"'"' | xargs less -N '
	exec rg --line-number --ignore-case "$@" . 2>/dev/null | fzf -e --multi --no-sort --exit-0 --reverse --prompt="$* > " \
		--preview 'exec g --preview {}' \
		--preview-window up \
		--bind 'enter:execute(g --open less {})' \
		--bind 'ctrl-o:execute(g --open nvim {})' \
		--bind 'ctrl-v:execute-silent(g --open code {})' \
		--bind 'ctrl-t:execute-silent(g --open vs {})' \
		--bind 'ctrl-y:execute-silent(echo {} | clipboard -i)'
}

preview() {
	local lines=`tput lines`
	# if (( ${_platforms[(I)darwin]} )); then
		lines=$(( $lines / 2 - 2 ))
	# fi
	exec cat <<EOF | python3
import subprocess
window_lines = ${lines}
filename, linenumber, vars = '''$* '''.split(':', 2)
linenumber = int(linenumber) - 1
p = subprocess.run(['src-highlight.sh', filename], stdout=subprocess.PIPE, shell=False)
p.check_returncode()

context = p.stdout.decode('utf-8').replace('\r\n', '\n').split('\n')
contextlines = len(context)
headline = max(0, linenumber - (window_lines - 1) // 2)
tailline = min(contextlines, window_lines - (linenumber - headline) + linenumber)
headline = headline - max(0, min(window_lines, contextlines) - (tailline - headline))

out = context[headline:linenumber]
out.append(u'\u001b[38;5;253;48;5;163;01m' + vars.rstrip())
out[linenumber + 1:] = context[linenumber + 1:tailline]
print ('\n'.join(out).replace('\t', '    '))
EOF
}

open() {
	local cmd=$1
	shift

	local args=(`echo $@ | awk -F : '{ print $1 " " $2 }'`)
	# local filename=${args[0]}
	# local linenumber=${args[1]}
	local filename=${args[1]}
	local linenumber=${args[2]}

	case "$cmd" in
	vs)
		(wcmd `wpath -aw ~/.dotfiles/misc/vshelper/openfile.vbs` `wpath -aw $filename` $linenumber) &
		;;
	code)
		code --reuse-window --goto "`wpath -aw $filename`:$linenumber"
		;;
	*)
		exec $cmd "+${linenumber}" $filename
		;;
	esac
}

t=

case "$1" in
	--preview)
		shift
		preview "$@"
		exit $?
		;;
	--open)
		shift
		open "$@"
		exit $?
		;;
	--)
		shift
		;;
	-cc)
		t="-tcpp"
		shift
		;;
	-t*)
		t="$1"
		shift
		;;
	-g)
		t="-g"
		shift
		;;
	-*)
		t="-t${1#-}"
		shift
		;;
	*)
		;;
esac

main $t "$@"
